/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MenuItems;

import com.mycompany.intersisacotizador_ver2.Conexion;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.DecimalFormat;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

import javax.swing.*;
import javax.swing.event.*;
import javax.swing.table.*;

/**
 *
 * @author Asus
 */
public class ModificarCotizacionFrame extends javax.swing.JFrame {

    private static Connection con;
    private static Conexion conexion;
    private int changedRow = 0;
    public boolean simil = true;  //para ver si da mil
    
    private String idNumCot = String.valueOf(ListadoCotizacionFrame.Num_cot);
    
    private int clickCount = 0;
    private static final int MAX_CLICKS = 5;
    
    int xMouse, yMouse;
    public ModificarCotizacionFrame() {
        initComponents();
        setLocationRelativeTo(null);
        setLocation(getX(), 75);
        conexion = new Conexion();
        cargarDatos();
        
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/appicon.png")));
        
        dgvCalculoBatch.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
            if (e.getKeyCode() == KeyEvent.VK_DELETE) {
                int selectedRow = dgvCalculoBatch.getSelectedRow();
                if (selectedRow != -1) {
                    // Get the table model
                    DefaultTableModel model = (DefaultTableModel) dgvCalculoBatch.getModel();
                    // Remove the selected row
                    model.removeRow(selectedRow);
                }
            }
        }
        });
        
        /*DefaultTableModel modeloTabla = (DefaultTableModel) dgvCalculoBatch.getModel();
        modeloTabla.addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                // Check if the event corresponds to an update in the "Cantidad" column
                if (e.getType() == TableModelEvent.UPDATE) {
                    // Handle the cell change event
                    handleCellChange(e.getFirstRow(), e.getColumn());
                }
            }
        });*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        JPanelDatosGenerales = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbcliente = new javax.swing.JComboBox<>();
        cbetapa = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        textBox2 = new javax.swing.JLabel();
        btnguardar = new javax.swing.JButton();
        btnCalcular = new javax.swing.JButton();
        txtFecha = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbVendedor = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        tbEstablo = new javax.swing.JTextField();
        JPanelBatch = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txt_volumen = new javax.swing.JLabel();
        tbPrecioBatchExtra = new javax.swing.JTextField();
        txt_batch = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txt_tamaño = new javax.swing.JLabel();
        txt_total = new javax.swing.JLabel();
        txtextra = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        tbBatchExtra = new javax.swing.JTextField();
        jPanelEnsacado = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        chksuper = new javax.swing.JRadioButton();
        chk20 = new javax.swing.JRadioButton();
        chk30 = new javax.swing.JRadioButton();
        chkinter = new javax.swing.JRadioButton();
        chkterceria = new javax.swing.JRadioButton();
        txt_kilos = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txt_cantidadsacos = new javax.swing.JLabel();
        jPanelMateriaPrima = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        cbMatPrim = new javax.swing.JComboBox<>();
        btnagregarmat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dgvCalculoBatch = new javax.swing.JTable();
        btnActualizarMateriaPrima = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jPanelGramosXVaca = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        tbGramosPVaca = new javax.swing.JTextField();
        jPanelCostos = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        tbMezclado = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        tbTarima = new javax.swing.JTextField();
        tbTipodeCambio = new javax.swing.JTextField();
        tbFlete = new javax.swing.JTextField();
        tbParticipacion = new javax.swing.JTextField();
        cbpart = new javax.swing.JComboBox<>();
        jPanelTotales = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        lblEnsacado = new javax.swing.JLabel();
        txttotalbatch = new javax.swing.JLabel();
        lblIngredientes = new javax.swing.JLabel();
        lblParticipacion = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        lblSubtotal = new javax.swing.JLabel();
        jPanelObservaciones = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textBox3 = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        tbUtilidadDeseada = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1145, 955));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setDoubleBuffered(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(900, 900));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Cotización");

        JPanelDatosGenerales.setBackground(new java.awt.Color(252, 252, 252));
        JPanelDatosGenerales.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel3.setText("Cliente");

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel2.setText("Datos Generales");

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel4.setText("Etapa");

        cbcliente.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        cbcliente.setEnabled(false);

        cbetapa.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        cbetapa.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel5.setText("No. Cotización");

        jLabel6.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel6.setText("Fecha");

        textBox2.setBackground(new java.awt.Color(204, 204, 204));
        textBox2.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        textBox2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnguardar.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        btnguardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/guardar.png"))); // NOI18N
        btnguardar.setText("Guardar");
        btnguardar.setEnabled(false);
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });

        btnCalcular.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        btnCalcular.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calcular.png"))); // NOI18N
        btnCalcular.setText("Recalcular");
        btnCalcular.setEnabled(false);
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        txtFecha.setBackground(new java.awt.Color(204, 204, 204));
        txtFecha.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        txtFecha.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel8.setText("Vendedor");

        cbVendedor.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        cbVendedor.setEnabled(false);

        jLabel15.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel15.setText("Establo");

        tbEstablo.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        tbEstablo.setEnabled(false);

        javax.swing.GroupLayout JPanelDatosGeneralesLayout = new javax.swing.GroupLayout(JPanelDatosGenerales);
        JPanelDatosGenerales.setLayout(JPanelDatosGeneralesLayout);
        JPanelDatosGeneralesLayout.setHorizontalGroup(
            JPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPanelDatosGeneralesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPanelDatosGeneralesLayout.createSequentialGroup()
                        .addGroup(JPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(28, 28, 28)
                        .addGroup(JPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbetapa, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(90, 90, 90)
                        .addGroup(JPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(JPanelDatosGeneralesLayout.createSequentialGroup()
                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15))
                            .addGroup(JPanelDatosGeneralesLayout.createSequentialGroup()
                                .addComponent(textBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72)
                                .addComponent(jLabel8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbVendedor, 0, 170, Short.MAX_VALUE)
                            .addComponent(tbEstablo)))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 151, Short.MAX_VALUE)
                .addGroup(JPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnCalcular)
                    .addComponent(btnguardar))
                .addContainerGap())
        );
        JPanelDatosGeneralesLayout.setVerticalGroup(
            JPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPanelDatosGeneralesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(JPanelDatosGeneralesLayout.createSequentialGroup()
                        .addGroup(JPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textBox2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(JPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(cbcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(JPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFecha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(JPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(cbetapa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6))))
                    .addGroup(JPanelDatosGeneralesLayout.createSequentialGroup()
                        .addGroup(JPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnguardar)
                            .addComponent(jLabel8)
                            .addComponent(cbVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(JPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCalcular)
                            .addComponent(jLabel15)
                            .addComponent(tbEstablo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        JPanelBatch.setBackground(new java.awt.Color(252, 252, 252));
        JPanelBatch.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel9.setText("Batch");

        jLabel11.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel11.setText("Volumen");

        jLabel12.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel12.setText("Batch Extra");

        jLabel13.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel13.setText("Batch");

        txt_volumen.setBackground(new java.awt.Color(204, 204, 204));
        txt_volumen.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        txt_volumen.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        txt_volumen.setText("0.00");
        txt_volumen.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbPrecioBatchExtra.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        tbPrecioBatchExtra.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tbPrecioBatchExtra.setText("1");
        tbPrecioBatchExtra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbPrecioBatchExtra.setEnabled(false);
        tbPrecioBatchExtra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbPrecioBatchExtraActionPerformed(evt);
            }
        });

        txt_batch.setBackground(new java.awt.Color(204, 204, 204));
        txt_batch.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        txt_batch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_batch.setText("0");
        txt_batch.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel19.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel19.setText("de");

        txt_tamaño.setBackground(new java.awt.Color(204, 204, 204));
        txt_tamaño.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        txt_tamaño.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_tamaño.setText("0");
        txt_tamaño.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txt_total.setBackground(new java.awt.Color(204, 204, 204));
        txt_total.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        txt_total.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txt_total.setText("0");
        txt_total.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtextra.setBackground(new java.awt.Color(204, 204, 204));
        txtextra.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        txtextra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtextra.setText("0");
        txtextra.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel20.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel20.setText("%");

        jLabel21.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        jLabel21.setText("$");

        jLabel22.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel22.setText("kg");

        jLabel23.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel23.setText("kg =");

        jLabel24.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel24.setText("Extra");

        tbBatchExtra.setBackground(new java.awt.Color(252, 252, 252));
        tbBatchExtra.setForeground(new java.awt.Color(252, 252, 252));
        tbBatchExtra.setText("0");
        tbBatchExtra.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        javax.swing.GroupLayout JPanelBatchLayout = new javax.swing.GroupLayout(JPanelBatch);
        JPanelBatch.setLayout(JPanelBatchLayout);
        JPanelBatchLayout.setHorizontalGroup(
            JPanelBatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanelBatchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPanelBatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPanelBatchLayout.createSequentialGroup()
                        .addGroup(JPanelBatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addGap(21, 21, 21)
                        .addGroup(JPanelBatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JPanelBatchLayout.createSequentialGroup()
                                .addGroup(JPanelBatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tbPrecioBatchExtra, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(JPanelBatchLayout.createSequentialGroup()
                                        .addComponent(txt_batch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(14, 14, 14)
                                        .addComponent(txt_tamaño, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(JPanelBatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel23))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(JPanelBatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txt_total, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtextra, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(JPanelBatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel22))
                                .addContainerGap(20, Short.MAX_VALUE))
                            .addGroup(JPanelBatchLayout.createSequentialGroup()
                                .addComponent(txt_volumen, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(JPanelBatchLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tbBatchExtra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102))))
        );
        JPanelBatchLayout.setVerticalGroup(
            JPanelBatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanelBatchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPanelBatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tbBatchExtra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JPanelBatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(JPanelBatchLayout.createSequentialGroup()
                        .addGroup(JPanelBatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel20)
                            .addComponent(txt_volumen, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JPanelBatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JPanelBatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12)
                                .addComponent(jLabel21)
                                .addComponent(tbPrecioBatchExtra, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel24)))
                    .addComponent(txtextra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JPanelBatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(txt_batch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_tamaño, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(JPanelBatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jLabel19))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelEnsacado.setBackground(new java.awt.Color(252, 252, 252));
        jPanelEnsacado.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel10.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel10.setText("Ensacado");

        chksuper.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        chksuper.setText("Supersaco");
        chksuper.setEnabled(false);
        chksuper.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chksuperItemStateChanged(evt);
            }
        });

        chk20.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        chk20.setText("Saco 20");
        chk20.setEnabled(false);
        chk20.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chk20ItemStateChanged(evt);
            }
        });

        chk30.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        chk30.setText("Saco 30");
        chk30.setEnabled(false);
        chk30.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chk30ItemStateChanged(evt);
            }
        });

        chkinter.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        chkinter.setText("Insagro");
        chkinter.setEnabled(false);
        chkinter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkinterItemStateChanged(evt);
            }
        });

        chkterceria.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        chkterceria.setText("Terciaria");
        chkterceria.setEnabled(false);
        chkterceria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkterceriaItemStateChanged(evt);
            }
        });

        txt_kilos.setBackground(new java.awt.Color(204, 204, 204));
        txt_kilos.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        txt_kilos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txt_kilos.setText("0");
        txt_kilos.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel26.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel26.setText("kg");

        jLabel27.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel27.setText("Sacos de");

        txt_cantidadsacos.setBackground(new java.awt.Color(204, 204, 204));
        txt_cantidadsacos.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        txt_cantidadsacos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txt_cantidadsacos.setText("0");
        txt_cantidadsacos.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanelEnsacadoLayout = new javax.swing.GroupLayout(jPanelEnsacado);
        jPanelEnsacado.setLayout(jPanelEnsacadoLayout);
        jPanelEnsacadoLayout.setHorizontalGroup(
            jPanelEnsacadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEnsacadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelEnsacadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelEnsacadoLayout.createSequentialGroup()
                        .addGroup(jPanelEnsacadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelEnsacadoLayout.createSequentialGroup()
                                .addComponent(chk20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(chkterceria))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelEnsacadoLayout.createSequentialGroup()
                                .addComponent(txt_cantidadsacos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_kilos, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanelEnsacadoLayout.createSequentialGroup()
                                .addComponent(chksuper)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(chkinter)))
                        .addGap(12, 12, 12)
                        .addComponent(jLabel26))
                    .addGroup(jPanelEnsacadoLayout.createSequentialGroup()
                        .addGroup(jPanelEnsacadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chk30)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelEnsacadoLayout.setVerticalGroup(
            jPanelEnsacadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEnsacadoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelEnsacadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chksuper)
                    .addComponent(chkinter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelEnsacadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chk20)
                    .addComponent(chkterceria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chk30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelEnsacadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_kilos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelEnsacadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel26)
                        .addComponent(jLabel27))
                    .addComponent(txt_cantidadsacos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanelMateriaPrima.setBackground(new java.awt.Color(252, 252, 252));
        jPanelMateriaPrima.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel29.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel29.setText("Materia Prima");

        cbMatPrim.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        cbMatPrim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnagregarmat.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        btnagregarmat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/agregar.png"))); // NOI18N
        btnagregarmat.setText("Agregar");
        btnagregarmat.setEnabled(false);
        btnagregarmat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnagregarmatActionPerformed(evt);
            }
        });

        dgvCalculoBatch.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        dgvCalculoBatch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Proveedor", "Materia Prima", "Cantidad", "PU", "Moneda", "DLLS", "Densidad", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dgvCalculoBatch.setEnabled(false);
        dgvCalculoBatch.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                dgvCalculoBatchComponentAdded(evt);
            }
        });
        dgvCalculoBatch.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dgvCalculoBatchPropertyChange(evt);
            }
        });
        TableColumnModel columnModel = dgvCalculoBatch.getColumnModel();
        //int targetColumn = 2;

        for (int targetColumn = 0; targetColumn < dgvCalculoBatch.getColumnCount(); targetColumn++) {
            columnModel.getColumn(targetColumn).setCellEditor(new DefaultCellEditor(new JTextField()) {
                @Override
                public boolean stopCellEditing() {
                    // This method is called when cell editing is stopped
                    boolean result = super.stopCellEditing();
                    if (result) {

                        handleCellChange(changedRow);
                        //JOptionPane.showMessageDialog(null, editedRow);

                    }
                    return result;
                }
            });
        }

        DefaultTableModel modeloTabla = (DefaultTableModel) dgvCalculoBatch.getModel();
        modeloTabla.addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                // Check if the event corresponds to an update in the "Cantidad" column
                if (e.getType() == TableModelEvent.UPDATE) {
                    changedRow = e.getFirstRow();
                }
            }
        });
        jScrollPane1.setViewportView(dgvCalculoBatch);
        if (dgvCalculoBatch.getColumnModel().getColumnCount() > 0) {
            dgvCalculoBatch.getColumnModel().getColumn(7).setMinWidth(1);
            dgvCalculoBatch.getColumnModel().getColumn(7).setMaxWidth(1);
        }

        btnActualizarMateriaPrima.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        btnActualizarMateriaPrima.setText("Ac. Mat. Prim.");
        btnActualizarMateriaPrima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarMateriaPrimaActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editar.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelMateriaPrimaLayout = new javax.swing.GroupLayout(jPanelMateriaPrima);
        jPanelMateriaPrima.setLayout(jPanelMateriaPrimaLayout);
        jPanelMateriaPrimaLayout.setHorizontalGroup(
            jPanelMateriaPrimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMateriaPrimaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMateriaPrimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanelMateriaPrimaLayout.createSequentialGroup()
                        .addGroup(jPanelMateriaPrimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelMateriaPrimaLayout.createSequentialGroup()
                                .addComponent(cbMatPrim, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnagregarmat)
                                .addGap(61, 61, 61)
                                .addComponent(btnActualizarMateriaPrima)
                                .addGap(39, 39, 39)
                                .addComponent(btnEditar))
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 16, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelMateriaPrimaLayout.setVerticalGroup(
            jPanelMateriaPrimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMateriaPrimaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMateriaPrimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbMatPrim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnagregarmat)
                    .addComponent(btnActualizarMateriaPrima)
                    .addComponent(btnEditar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanelGramosXVaca.setBackground(new java.awt.Color(252, 252, 252));
        jPanelGramosXVaca.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel30.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel30.setText("Gramos por Vaca");

        tbGramosPVaca.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        tbGramosPVaca.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tbGramosPVaca.setText("0");
        tbGramosPVaca.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbGramosPVaca.setEnabled(false);
        tbGramosPVaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbGramosPVacaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelGramosXVacaLayout = new javax.swing.GroupLayout(jPanelGramosXVaca);
        jPanelGramosXVaca.setLayout(jPanelGramosXVacaLayout);
        jPanelGramosXVacaLayout.setHorizontalGroup(
            jPanelGramosXVacaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelGramosXVacaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tbGramosPVaca, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanelGramosXVacaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelGramosXVacaLayout.setVerticalGroup(
            jPanelGramosXVacaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGramosXVacaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbGramosPVaca, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelCostos.setBackground(new java.awt.Color(252, 252, 252));
        jPanelCostos.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel31.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel31.setText("Costos");

        tbMezclado.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        tbMezclado.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tbMezclado.setText("0.00");
        tbMezclado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbMezclado.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        tbMezclado.setEnabled(false);
        tbMezclado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbMezcladoActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel32.setText("Mezclado");

        jLabel33.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel33.setText("Tarima");

        jLabel34.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel34.setText("Flete");

        jLabel35.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel35.setText("Tipo de Cambio");

        jLabel36.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel36.setText("Participación");

        tbTarima.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        tbTarima.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tbTarima.setText("0.00");
        tbTarima.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbTarima.setEnabled(false);
        tbTarima.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tbTarimaFocusGained(evt);
            }
        });
        tbTarima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbTarimaActionPerformed(evt);
            }
        });

        tbTipodeCambio.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        tbTipodeCambio.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tbTipodeCambio.setText("0.00");
        tbTipodeCambio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbTipodeCambio.setEnabled(false);
        tbTipodeCambio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tbTipodeCambioFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tbTipodeCambioFocusLost(evt);
            }
        });
        tbTipodeCambio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbTipodeCambioActionPerformed(evt);
            }
        });

        tbFlete.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        tbFlete.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tbFlete.setText("0.00");
        tbFlete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbFlete.setEnabled(false);
        tbFlete.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tbFleteFocusGained(evt);
            }
        });
        tbFlete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbFleteActionPerformed(evt);
            }
        });

        tbParticipacion.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        tbParticipacion.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tbParticipacion.setText("0.00");
        tbParticipacion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbParticipacion.setEnabled(false);
        tbParticipacion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tbParticipacionFocusGained(evt);
            }
        });
        tbParticipacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbParticipacionActionPerformed(evt);
            }
        });

        cbpart.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        cbpart.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "%", "$" }));
        cbpart.setEnabled(false);

        javax.swing.GroupLayout jPanelCostosLayout = new javax.swing.GroupLayout(jPanelCostos);
        jPanelCostos.setLayout(jPanelCostosLayout);
        jPanelCostosLayout.setHorizontalGroup(
            jPanelCostosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCostosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCostosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCostosLayout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tbTarima, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCostosLayout.createSequentialGroup()
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tbTipodeCambio, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCostosLayout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tbFlete, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCostosLayout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addComponent(cbpart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tbParticipacion, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCostosLayout.createSequentialGroup()
                        .addGroup(jPanelCostosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel31, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tbMezclado, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelCostosLayout.setVerticalGroup(
            jPanelCostosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCostosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCostosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tbMezclado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelCostosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel33)
                    .addComponent(tbTarima, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelCostosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(tbFlete, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelCostosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(tbTipodeCambio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelCostosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(tbParticipacion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbpart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelTotales.setBackground(new java.awt.Color(252, 252, 252));
        jPanelTotales.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel37.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel37.setText("Totales");

        jLabel38.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel38.setText("Ingredientes");

        jLabel39.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel39.setText("Ensacado");

        jLabel40.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel40.setText("Batch");

        jLabel41.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel41.setText("Subtotal");

        jLabel42.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel42.setText("Participación");

        jLabel43.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel43.setText("Total USD");

        lblEnsacado.setBackground(new java.awt.Color(204, 204, 204));
        lblEnsacado.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        lblEnsacado.setText("0.00");
        lblEnsacado.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txttotalbatch.setBackground(new java.awt.Color(204, 204, 204));
        txttotalbatch.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        txttotalbatch.setText("0.00");
        txttotalbatch.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblIngredientes.setBackground(new java.awt.Color(204, 204, 204));
        lblIngredientes.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        lblIngredientes.setText("0.00");
        lblIngredientes.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblParticipacion.setBackground(new java.awt.Color(204, 204, 204));
        lblParticipacion.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        lblParticipacion.setText("0.00");
        lblParticipacion.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblTotal.setBackground(new java.awt.Color(204, 204, 204));
        lblTotal.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        lblTotal.setText("0.00");
        lblTotal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblSubtotal.setBackground(new java.awt.Color(204, 204, 204));
        lblSubtotal.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        lblSubtotal.setText("0.00");
        lblSubtotal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanelTotalesLayout = new javax.swing.GroupLayout(jPanelTotales);
        jPanelTotales.setLayout(jPanelTotalesLayout);
        jPanelTotalesLayout.setHorizontalGroup(
            jPanelTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTotalesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTotalesLayout.createSequentialGroup()
                        .addComponent(jLabel39)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblEnsacado, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelTotalesLayout.createSequentialGroup()
                        .addComponent(jLabel40)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txttotalbatch, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelTotalesLayout.createSequentialGroup()
                        .addComponent(jLabel41)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelTotalesLayout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addComponent(lblParticipacion, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelTotalesLayout.createSequentialGroup()
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelTotalesLayout.createSequentialGroup()
                        .addComponent(jLabel38)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblIngredientes, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelTotalesLayout.createSequentialGroup()
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelTotalesLayout.setVerticalGroup(
            jPanelTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTotalesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel37)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelTotalesLayout.createSequentialGroup()
                        .addComponent(jLabel38)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel39))
                    .addGroup(jPanelTotalesLayout.createSequentialGroup()
                        .addComponent(lblIngredientes, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblEnsacado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel40)
                    .addComponent(txttotalbatch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTotalesLayout.createSequentialGroup()
                        .addComponent(lblSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblParticipacion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelTotalesLayout.createSequentialGroup()
                        .addComponent(jLabel41)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel42)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel43)
                    .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanelObservaciones.setBackground(new java.awt.Color(252, 252, 252));
        jPanelObservaciones.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel50.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel50.setText("Observaciones");

        textBox3.setColumns(20);
        textBox3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textBox3.setLineWrap(true);
        textBox3.setRows(5);
        textBox3.setEnabled(false);
        jScrollPane2.setViewportView(textBox3);

        javax.swing.GroupLayout jPanelObservacionesLayout = new javax.swing.GroupLayout(jPanelObservaciones);
        jPanelObservaciones.setLayout(jPanelObservacionesLayout);
        jPanelObservacionesLayout.setHorizontalGroup(
            jPanelObservacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelObservacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelObservacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                    .addGroup(jPanelObservacionesLayout.createSequentialGroup()
                        .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelObservacionesLayout.setVerticalGroup(
            jPanelObservacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelObservacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel50)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(252, 252, 252));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel7.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel7.setText("Divisor utilizado");

        tbUtilidadDeseada.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        tbUtilidadDeseada.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbUtilidadDeseada.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tbUtilidadDeseada)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbUtilidadDeseada, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logoinsa.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(294, 294, 294)
                        .addComponent(jLabel14)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JPanelDatosGenerales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(JPanelBatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jPanelEnsacado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38)
                                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jPanelMateriaPrima, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanelGramosXVaca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanelCostos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanelTotales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanelObservaciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JPanelDatosGenerales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanelEnsacado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(JPanelBatch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(151, 151, 151)
                                .addComponent(jPanelTotales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanelObservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanelMateriaPrima, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanelGramosXVaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelCostos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1123, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 913, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tbPrecioBatchExtraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbPrecioBatchExtraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbPrecioBatchExtraActionPerformed

    private void tbGramosPVacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbGramosPVacaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbGramosPVacaActionPerformed

    private void tbMezcladoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbMezcladoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbMezcladoActionPerformed

    private void tbTarimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbTarimaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbTarimaActionPerformed

    private void tbTipodeCambioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbTipodeCambioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbTipodeCambioActionPerformed

    private void tbFleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbFleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbFleteActionPerformed

    private void tbParticipacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbParticipacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbParticipacionActionPerformed

    private void btnagregarmatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnagregarmatActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modeloTabla = (DefaultTableModel) dgvCalculoBatch.getModel();
        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;
        String nombre = cbMatPrim.getSelectedItem().toString();
        
        //int[]anchos = {20,200,40,10,40,20,30,0,5};
        int[]anchosMax = {150,360,65,45,60,65,70,1,20};
        int[]anchosMin = {100,300,55,35,40,50,70,1,10};
        for(int i = 0; i < dgvCalculoBatch.getColumnCount(); i++){
            //dgvCalculoBatch.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            dgvCalculoBatch.getColumnModel().getColumn(i).setMaxWidth(anchosMax[i]);
            dgvCalculoBatch.getColumnModel().getColumn(i).setMinWidth(anchosMin[i]);
        }
        
        if (cbMatPrim.getSelectedItem() != null && !cbMatPrim.getSelectedItem().toString().isEmpty()) {
            try {
                String sql = "SELECT * FROM MP WHERE Nombre = ?";
                ps = con.prepareStatement(sql);
                ps.setString(1, nombre);
                rs = ps.executeQuery();
                rsmd = rs.getMetaData();
                columnas = rsmd.getColumnCount();
                
                while(rs.next()){
                    Object[] fila = new Object[columnas];
                    //for(int indice = 0; indice < columnas; indice++){
                        fila[0] = rs.getObject(7 + 1);
                        fila[1] = rs.getObject(1 + 1);
                        fila[3] = rs.getObject(3 + 1);
                        fila[4] = rs.getObject(4 + 1);
                        fila[6] = rs.getObject(5 + 1);
                        fila[7] = rs.getObject(0 + 1);
                    //}
                    modeloTabla.addRow(fila);
                    addRows();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
        
        
    }//GEN-LAST:event_btnagregarmatActionPerformed

    private void dgvCalculoBatchComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_dgvCalculoBatchComponentAdded
        // TODO add your handling code here:
        /*if(tbTipodeCambio.getText().equals("0.00")){
            JOptionPane.showMessageDialog(null, "Recuerde insertar tipo de cambio", "Informacion", JOptionPane.INFORMATION_MESSAGE);
            tbTipodeCambio.requestFocus();
        }
        
        int rowCount = dgvCalculoBatch.getRowCount();
        int columnIndex = 8;
        for(int i = 0; i < rowCount; i++)
            dgvCalculoBatch.setValueAt(i + 1, i, columnIndex);*/
    }//GEN-LAST:event_dgvCalculoBatchComponentAdded

    private void dgvCalculoBatchPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dgvCalculoBatchPropertyChange
        // TODO add your handling code here:
        /*if ("tableCellEditor".equals(evt.getPropertyName())) {
        // Check if the cell being edited has changed
            if (evt.getOldValue() == null && evt.getNewValue() instanceof DefaultCellEditor) {
                JOptionPane.showMessageDialog(null, "Cambio en la celda");
            }
        }*/
    }//GEN-LAST:event_dgvCalculoBatchPropertyChange

    private void chksuperItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chksuperItemStateChanged
        // TODO add your handling code here:
        if (chksuper.isSelected() == true)
            {
                chk20.setSelected(false);
                chk20.setEnabled(false);
                chk30.setSelected(false);
                chk30.setEnabled(false);

               
            }
            else
            {
                chk20.setEnabled(true);
                chk30.setEnabled(true);
            }
    }//GEN-LAST:event_chksuperItemStateChanged

    private void chk20ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chk20ItemStateChanged
        // TODO add your handling code here:
        if(chk20.isSelected() == true)
        {
            chksuper.setSelected(false);
            chksuper.setEnabled(false);
            chk30.setSelected(false);
            chk30.setEnabled(false);
        }
        else
        {
            chksuper.setEnabled(true);
            chk30.setEnabled(true);
        }
    }//GEN-LAST:event_chk20ItemStateChanged

    private void chk30ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chk30ItemStateChanged
        // TODO add your handling code here:
        if(chk30.isSelected() == true)
        {
            chksuper.setSelected(false);
            chksuper.setEnabled(false);
            chk20.setSelected(false);
            chk20.setEnabled(false);
        }
        else
        {
            chksuper.setEnabled(true);
            chk20.setEnabled(true);
        }
    }//GEN-LAST:event_chk30ItemStateChanged

    private void chkinterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkinterItemStateChanged
        // TODO add your handling code here:
        if (chkinter.isSelected() == true)
        {
            chkterceria.setSelected(false);
            chkterceria.setEnabled(false);
        }
        else
        {
            chkterceria.setEnabled(true);
        }
    }//GEN-LAST:event_chkinterItemStateChanged

    private void chkterceriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkterceriaItemStateChanged
        // TODO add your handling code here:
        if (chkterceria.isSelected() == true)
            {

                chkinter.setSelected(false);
                chkinter.setEnabled(false);

            }
            else
            {
                chkinter.setEnabled(true);
            }
    }//GEN-LAST:event_chkterceriaItemStateChanged

    private void tbTarimaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbTarimaFocusGained
        // TODO add your handling code here:
        tbTarima.setText("");
    }//GEN-LAST:event_tbTarimaFocusGained

    private void tbParticipacionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbParticipacionFocusGained
        // TODO add your handling code here:
        tbParticipacion.setText("");
    }//GEN-LAST:event_tbParticipacionFocusGained

    private void tbTipodeCambioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbTipodeCambioFocusGained
        // TODO add your handling code here:
        tbTipodeCambio.setText("");
    }//GEN-LAST:event_tbTipodeCambioFocusGained

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        // TODO add your handling code here:
        if(tbTipodeCambio.getText().equals(""))
            tbTipodeCambio.setText("1");
        if(tbFlete.getText().equals(""))
            tbFlete.setText("1");
        if(tbTarima.getText().equals(""))
            tbTarima.setText("1");
        if(tbParticipacion.getText().equals(""))
            tbParticipacion.setText("1");
        
        BigDecimal mez = new BigDecimal(tbPrecioBatchExtra.getText()).multiply(new BigDecimal(tbBatchExtra.getText())).add(new BigDecimal(tbMezclado.getText()));

        BigDecimal tar = new BigDecimal(tbTarima.getText());
        BigDecimal fle = new BigDecimal(tbFlete.getText());
        BigDecimal volumentotal = BigDecimal.ZERO;
        BigDecimal masalb = BigDecimal.ZERO;
        BigDecimal volumen = BigDecimal.ZERO;
        BigDecimal mil = BigDecimal.ZERO;

        Object cliente = cbcliente.getSelectedItem();
        String cboxclientes = cliente.toString();
        Object participacion = cbpart.getSelectedItem();
        String cbpart1 = participacion.toString();
        Object etapa = cbetapa.getSelectedItem();
        String cboxetapa = etapa.toString();
        
        boolean flag = false;

        try
        {
            if(!cboxclientes.equals("") && !cbpart1.equals("") && !cboxetapa.equals("") &&((chk20.isSelected() || chk30.isSelected() || chksuper.isSelected())
                && (chkinter.isSelected() || chkterceria.isSelected())) && !tbPrecioBatchExtra.getText().equals("0.00"))
        {
            int rowCount = dgvCalculoBatch.getRowCount();
            for(int i = 0; i < rowCount; i++)
            {
                /*String num = dgvCalculoBatch.getValueAt(i, dgvCalculoBatch.getColumnModel().getColumnIndex(0)).toString();
                String nom = dgvCalculoBatch.getValueAt(i, dgvCalculoBatch.getColumnModel().getColumnIndex(1)).toString();*/
                String num = dgvCalculoBatch.getValueAt(i, 7).toString();
                String nom = dgvCalculoBatch.getValueAt(i, 1).toString();
                /*BigDecimal can = new BigDecimal(dgvCalculoBatch.getValueAt(i, dgvCalculoBatch.getColumnModel().getColumnIndex("Cantidad")).toString());
                BigDecimal den = new BigDecimal(dgvCalculoBatch.getValueAt(i, dgvCalculoBatch.getColumnModel().getColumnIndex("Densidad")).toString());*/             
                //BigDecimal can = new BigDecimal(dgvCalculoBatch.getValueAt(i, 2).toString());
                //BigDecimal den = new BigDecimal(dgvCalculoBatch.getValueAt(i, 6).toString());
                Object valueTable = dgvCalculoBatch.getValueAt(i, 2);
                Object valueTable2 = dgvCalculoBatch.getValueAt(i, 6);
                BigDecimal can;
                if (valueTable != null) {
                    can = new BigDecimal(valueTable.toString());
                } else {
                    can = BigDecimal.ONE;
                }
                BigDecimal den = BigDecimal.valueOf(1);
                if (valueTable2 != null) {
                    den = new BigDecimal(valueTable2.toString());
                } else {
                    den = BigDecimal.ONE;
                }
                BigDecimal cam = new BigDecimal(tbTipodeCambio.getText());

                masalb = can.multiply(new BigDecimal("2.2046"));
                volumen = masalb.divide(den, RoundingMode.HALF_UP);
                volumentotal = volumentotal.add(volumen);
                //mil = mil.add(new BigDecimal(dgvCalculoBatch.getValueAt(i, dgvCalculoBatch.getColumnModel().getColumnIndex(2)).toString()));
                //mil = mil.add(new BigDecimal(dgvCalculoBatch.getValueAt(i, 2).toString())); ESTA USABA ANTES DE HACER LAS VALIDACIONES
                if (valueTable != null) {
                    mil = mil.add(new BigDecimal(valueTable.toString()));
                } else {
                    mil = mil.add(BigDecimal.ONE);
                }
            }

            int comparasion = mil.compareTo(new BigDecimal(1000));

            if(comparasion == 0)
            {
                simil = true;
                BigDecimal conversionFactor = new BigDecimal("40.59");
                BigDecimal result = volumentotal.multiply(BigDecimal.valueOf(100)).divide(conversionFactor, 4, RoundingMode.HALF_UP);
                txt_volumen.setText(result.toString());
                //(Convert.ToDecimal(txt_volumen.Text) * Convert.ToDecimal(1000.00 / 271.00)) / 100;
                BigDecimal hundred = new BigDecimal("100");
                //CAMBIAR EL 1000 por 500
                BigDecimal vol = (result.multiply(BigDecimal.valueOf(1000.00 / 500.00))).divide(hundred, 4, BigDecimal.ROUND_HALF_UP);
                //BigDecimal vol = (result.multiply(BigDecimal.valueOf(1000.00 / 500))).divide(hundred, 4, BigDecimal.ROUND_HALF_UP);
                BigDecimal vol2 = vol.setScale(0, RoundingMode.FLOOR).add(BigDecimal.ONE);
                txt_batch.setText(vol2.toString());

                if(result.compareTo(new BigDecimal("100")) >= 0) //SE SEBREPASA EL VOLUMEN
                {
                    txt_volumen.setOpaque(true);
                    txt_volumen.setBackground(Color.RED);

                    //AQUÍ LE CAMBIÉ, ERAN 271 EN LOS DOS DE 450
                    for(int i = 500; i >= 1; i = i - 10)
                    {
                        BigDecimal batch = new BigDecimal("1000.00").divide(BigDecimal.valueOf(i), RoundingMode.HALF_UP);
                        BigDecimal batch2 = new BigDecimal("1000.00").divide(BigDecimal.valueOf(i - 10), RoundingMode.HALF_UP);

                        if(i == 500)
                        {
                            if (vol.compareTo(BigDecimal.ZERO) > 0 && vol.compareTo(batch) <= 0){
                                txt_tamaño.setText(Integer.toString(i));
                                i = 0;
                            }
                            if (vol.compareTo(batch) > 0 && vol.compareTo(batch2) <= 0){
                                txt_tamaño.setText(Integer.toString(i - 10));
                                i = 0;
                            }
                        }
                        else
                        {
                            if (vol.compareTo(batch) > 0 && vol.compareTo(batch2) < 0){
                                txt_tamaño.setText(Integer.toString(i - 10));
                                i = 0;
                            }
                        }
                    }
                    tbPrecioBatchExtra.setEnabled(true);
                }
                else //MENOS DE 100%
                {
                    txt_volumen.setOpaque(true);
                    txt_volumen.setBackground(Color.LIGHT_GRAY);
                    //AQUÍ TAMBIÉN LE CAMBIÉ, DECÍA 271
                    txt_tamaño.setText("500");
                }
                BigDecimal batch = new BigDecimal(txt_batch.getText());
                BigDecimal tamaño = new BigDecimal(txt_tamaño.getText());
                BigDecimal total = batch.multiply(tamaño);
                txt_total.setText(total.toString());
                flag = true;
            }
            else
            {
                BigDecimal restan = new BigDecimal("1000").subtract(mil);
                if (restan.compareTo(BigDecimal.ZERO) > 0)
                    JOptionPane.showMessageDialog(null, "Las cantidades no suman 1000, suman "+mil+"\n Faltan "+restan+ "\n Verifique por favor");
                else
                    //restan.multiply(BigDecimal.valueOf(-1));
                    JOptionPane.showMessageDialog(null, "Las cantidades no suman 1000, suman "+mil+"\n Sobran "+restan.multiply(BigDecimal.valueOf(-1))+ "\n Verifique por favor");
                simil = false;
            }

            BigDecimal totalmat = BigDecimal.ZERO;
            BigDecimal precmat = BigDecimal.ZERO; //NUEVO
            for(int i = 0; i < rowCount; i++)
            {
                //precmat = new BigDecimal(dgvCalculoBatch.getValueAt(i, dgvCalculoBatch.getColumnModel().getColumnIndex(5)).toString());
                Object valueTable3 = dgvCalculoBatch.getValueAt(i, 5);
                if(valueTable3 != null)
                    precmat = new BigDecimal(valueTable3.toString());
                else
                    precmat = BigDecimal.ONE;
                //precmat = new BigDecimal(dgvCalculoBatch.getValueAt(i, 5).toString()); ESTE SE USABA ANTES
                totalmat = totalmat.add(precmat);
            }
            totalmat = totalmat.setScale(4, RoundingMode.HALF_UP);
            lblIngredientes.setText(totalmat.toString());
            BigDecimal preciosaco = BigDecimal.ZERO;

            if(chksuper.isSelected() == true)
            {
                txt_cantidadsacos.setText("1");
                txt_kilos.setText(txt_total.getText());

                //PODRÍA REVISAR ESTO, YA QUE HAY DOS TRY-CATCH, PODRIA DEJARLO EN 1 TAL VEZ
                if(chkinter.isSelected() == true)
                {
                    try{
                        con = conexion.establecerConexion();
                        PreparedStatement ps = con.prepareStatement("select * from Sacos where Id_Saco = 1 order by Nombre Asc");
                        ResultSet rs = ps.executeQuery();
                        while(rs.next())
                        {
                            preciosaco = new BigDecimal(rs.getString("precio"));
                            preciosaco = preciosaco.setScale(4, RoundingMode.HALF_UP);
                            lblEnsacado.setText(preciosaco.toString());
                        }
                        rs.close();
                    }catch(SQLException e){
                        JOptionPane.showMessageDialog(null, e.toString());
                    }
                }else
                {
                    try{
                        con = conexion.establecerConexion();
                        PreparedStatement ps = con.prepareStatement("select * from Sacos where Id_Saco = 4 order by Nombre Asc");
                        ResultSet rs = ps.executeQuery();
                        while(rs.next())
                        {
                            preciosaco = new BigDecimal(rs.getString("precio"));
                            preciosaco = preciosaco.setScale(4, RoundingMode.HALF_UP);
                            lblEnsacado.setText(preciosaco.toString());
                        }
                        rs.close();
                    }catch(SQLException e){
                        JOptionPane.showMessageDialog(null, e.toString());
                    }
                }
            }

            else if(chk20.isSelected() == true)
            {
                if(simil == true)
                {
                    int tamano = Integer.parseInt(txt_tamaño.getText().substring(0,2)+"0");
                    int cantidadsacos = (tamano/20)*Integer.parseInt(txt_batch.getText());
                    txt_cantidadsacos.setText(Integer.toString(cantidadsacos));
                    txt_kilos.setText("20");
                    if(chkinter.isSelected() == true)
                    {
                        try{
                            con = conexion.establecerConexion();
                            PreparedStatement ps = con.prepareStatement("select * from Sacos where Id_Saco = 2 order by Nombre Asc");
                            ResultSet rs = ps.executeQuery();
                            while(rs.next())
                            {
                                preciosaco = new BigDecimal(rs.getString("precio"));
                                preciosaco = preciosaco.multiply(new BigDecimal(txt_cantidadsacos.getText()));
                                preciosaco = preciosaco.setScale(4, RoundingMode.HALF_UP);
                                lblEnsacado.setText(preciosaco.toString());
                            }
                            rs.close();
                        }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.toString());
                        }
                    }
                }
                else
                {
                    try{
                        con = conexion.establecerConexion();
                        PreparedStatement ps = con.prepareStatement("select * from Sacos where Id_Saco = 5 order by Nombre Asc");
                        ResultSet rs = ps.executeQuery();
                        while(rs.next())
                        {
                            preciosaco = new BigDecimal(rs.getString("precio"));
                            preciosaco = preciosaco.multiply(new BigDecimal(txt_cantidadsacos.getText()));
                            preciosaco = preciosaco.setScale(4, RoundingMode.HALF_UP);
                            lblEnsacado.setText(preciosaco.toString());
                        }
                        rs.close();
                    }catch(SQLException e){
                        JOptionPane.showMessageDialog(null, e.toString());
                    }
                }
            }

            else if(chk30.isSelected() == true)
            {
                if(simil == true)
                {
                    int tamano = Integer.parseInt(txt_tamaño.getText().substring(0,2)+"0");
                    int cantidadsacos = (tamano/30)*Integer.parseInt(txt_batch.getText());
                    txt_cantidadsacos.setText(Integer.toString(cantidadsacos));
                    txt_kilos.setText("30");
                    if(chkinter.isSelected() == true)
                    {
                        try{
                            con = conexion.establecerConexion();
                            PreparedStatement ps = con.prepareStatement("select * from Sacos where Id_Saco = 3 order by Nombre Asc");
                            ResultSet rs = ps.executeQuery();
                            while(rs.next())
                            {
                                preciosaco = new BigDecimal(rs.getString("precio"));
                                preciosaco = preciosaco.multiply(new BigDecimal(txt_cantidadsacos.getText()));
                                preciosaco = preciosaco.setScale(4, RoundingMode.HALF_UP);
                                lblEnsacado.setText(preciosaco.toString());
                            }
                            rs.close();
                        }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.toString());
                        }
                    }
                }
                else
                {
                    try{
                        con = conexion.establecerConexion();
                        PreparedStatement ps = con.prepareStatement("select * from Sacos where Id_Saco = 6 order by Nombre Asc");
                        ResultSet rs = ps.executeQuery();
                        while(rs.next())
                        {
                            preciosaco = new BigDecimal(rs.getString("precio"));
                            preciosaco = preciosaco.multiply(new BigDecimal(txt_cantidadsacos.getText()));
                            preciosaco = preciosaco.setScale(4, RoundingMode.HALF_UP);
                            lblEnsacado.setText(preciosaco.toString());
                        }
                        rs.close();
                    }catch(SQLException e){
                        JOptionPane.showMessageDialog(null, e.toString());
                    }
                }
            }

            //REVISION HASTA AQUÍ
            BigDecimal totalbatch = BigDecimal.ZERO;
            BigDecimal txtvolumen1 = new BigDecimal(txt_volumen.getText());
            if(txtvolumen1.compareTo(BigDecimal.valueOf(100)) > 0)
            {
                int batch1 = Integer.parseInt(txt_batch.getText())+1;
                txt_batch.setText(Integer.toString(batch1));
                BigDecimal div = new BigDecimal((Integer.parseInt(txt_total.getText())/Integer.parseInt(txt_batch.getText())));
                txt_tamaño.setText(div.toString());
                int extra1 = Integer.parseInt(txt_batch.getText())-4;
                txtextra.setText(Integer.toString(extra1));

                //CAMBIO
                int scale = 10;
                RoundingMode roundingMode = RoundingMode.HALF_UP;
                BigDecimal totalbatch2 = new BigDecimal(tbPrecioBatchExtra.getText()).divide(new BigDecimal(tbTipodeCambio.getText()),scale,roundingMode);
                //HASTA AQUÍ CAMBIO
                totalbatch = totalbatch2.multiply(new BigDecimal(txtextra.getText()));
                totalbatch = totalbatch.setScale(4, RoundingMode.HALF_UP);
                txttotalbatch.setText(totalbatch.toString());
            }
            int scale = 10;
            RoundingMode roundingMode = RoundingMode.HALF_UP;
            BigDecimal mezclado = new BigDecimal(tbMezclado.getText()).divide(new BigDecimal(tbTipodeCambio.getText()),scale,roundingMode);
            BigDecimal tarima = new BigDecimal(tbTarima.getText()).divide(new BigDecimal(tbTipodeCambio.getText()),scale,roundingMode);
            BigDecimal flete = new BigDecimal(tbFlete.getText()).divide(new BigDecimal(tbTipodeCambio.getText()),scale,roundingMode);
            BigDecimal ingredientes = new BigDecimal(lblIngredientes.getText());
            BigDecimal ensacado = new BigDecimal(lblEnsacado.getText());
            BigDecimal batchprecio =  new BigDecimal(txttotalbatch.getText());
            BigDecimal subtotal = mezclado.add(tarima).add(flete).add(ingredientes).add(ensacado).add(batchprecio);
            subtotal = subtotal.setScale(4, RoundingMode.HALF_UP);
            lblSubtotal.setText(subtotal.toString());
            BigDecimal parti = BigDecimal.ZERO;
            BigDecimal participa = new BigDecimal(tbParticipacion.getText()).divide(BigDecimal.valueOf(100));
            BigDecimal totaltotal = BigDecimal.ZERO;

            //ESTO AGREGUÉ
            BigDecimal utilidadDeseada = BigDecimal.valueOf(0);
            if (!tbUtilidadDeseada.getText().equals("")){
                utilidadDeseada = BigDecimal.valueOf(100).subtract(new BigDecimal(tbUtilidadDeseada.getText()));
            }
            else{
                utilidadDeseada = BigDecimal.valueOf(100);
            }
            BigDecimal utilidadDeseadaDecimal = utilidadDeseada.divide(BigDecimal.valueOf(100));
            BigDecimal resUtilidadDeseada = ingredientes.divide(utilidadDeseadaDecimal,scale,roundingMode);
            BigDecimal totalUtilidadDeseada = resUtilidadDeseada.subtract(ingredientes);
            BigDecimal utilidadDeseadaDolares = totalUtilidadDeseada.multiply(new BigDecimal(tbTipodeCambio.getText()));
            //utilidadDeseadaDolares = utilidadDeseadaDolares.setScale(2, RoundingMode.HALF_UP);
            utilidadDeseadaDolares = utilidadDeseadaDolares.setScale(4, RoundingMode.HALF_UP);
            tbMezclado.setText(utilidadDeseadaDolares.toString());
            //HASTA AQUÍ

            Object part3 = cbpart.getSelectedItem();
            String cbpart3 = part3.toString();
            if(cbpart3.equals("%"))
            {
                /*AQUÍ CAMBIO
                parti = subtotal.multiply(participa).setScale(4, RoundingMode.HALF_UP);*/
                parti = new BigDecimal(tbMezclado.getText()).multiply(participa).setScale(4, RoundingMode.HALF_UP);
                lblParticipacion.setText(parti.toString());
                totaltotal = parti.add(subtotal);
                totaltotal = totaltotal.setScale(4, RoundingMode.HALF_UP);
                lblTotal.setText(totaltotal.toString());
            }
            else if(cbpart3.equals("$"))
            {
                parti = new BigDecimal(tbParticipacion.getText()).divide(new BigDecimal(tbTipodeCambio.getText()));
                lblParticipacion.setText(parti.toString());
                totaltotal = parti.add(subtotal);
                totaltotal = totaltotal.setScale(4, RoundingMode.HALF_UP);
                lblTotal.setText(totaltotal.toString());
            }
            btnguardar.setEnabled(true);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Verifique todos los campos, por favor");
        }
        }
        /*catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.toString());
        }*/
        catch (IllegalArgumentException e) {
            // Print the stack trace to the console
            e.printStackTrace();
        }
        
        clickCount++;

        // Check if the maximum number of clicks is reached
        if (clickCount < MAX_CLICKS && flag) {
            // Simulate a button click
            btnCalcular.doClick();
        } else {
            // Optionally, reset the click count or perform other actions
            clickCount = 0;
        }
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
        // TODO add your handling code here:
        try
        {
            if(!textBox3.equals(""))
            {
                int dialogResult = JOptionPane.showConfirmDialog(null, "Ya verificó y calculó todos los datos?", "Informacion", JOptionPane.YES_NO_OPTION);
                if(dialogResult == JOptionPane.YES_OPTION)
                {
                    int idcot = Integer.parseInt(textBox2.getText());
                    int idcliente;
                    int idetapa;
                    int idsaco;
                    int idvendedor;
                    idetapa = 1;
                    idsaco = 0;
                    idcliente = 0;
                    idvendedor = 1;
                    BigDecimal preciobatch = new BigDecimal(tbPrecioBatchExtra.getText());
                    String fecha = txtFecha.getText();
                    String fechaHoy = txtFecha.getText();
                    String gramos = tbGramosPVaca.getText();
                    String mezcla = tbMezclado.getText();
                    String tarima = tbTarima.getText();
                    String flete = tbFlete.getText();
                    BigDecimal tipocambio = new BigDecimal(tbTipodeCambio.getText());
                    BigDecimal participacion = new BigDecimal(tbParticipacion.getText());
                    Object parte = cbpart.getSelectedItem();
                    String tipopart = parte.toString();
                    String descripcion = textBox3.getText();
                    Object vend = cbVendedor.getSelectedItem();
                    String vendedor = vend.toString();
                    String establo = tbEstablo.getText();

                    if (chksuper.isSelected() == true && chkinter.isSelected() == true)
                    {
                        idsaco = 1;
                    }
                    else if (chksuper.isSelected() == true && chkterceria.isSelected() == true)
                    {
                        idsaco = 4;
                    }
                    else if (chk20.isSelected() == true && chkinter.isSelected() == true)
                    {
                        idsaco = 2;
                    }
                    else if (chk20.isSelected() == true && chkterceria.isSelected() == true)
                    {
                        idsaco = 5;
                    }
                    else if (chk30.isSelected() == true && chkinter.isSelected() == true)
                    {
                        idsaco = 3;
                    }
                    else if (chk30.isSelected() == true && chkterceria.isSelected() == true)
                    {
                        idsaco = 6;
                    }

                    try{
                        Object clientes3 = cbcliente.getSelectedItem();
                        String cliente3 = clientes3.toString();
                        con = conexion.establecerConexion();
                        PreparedStatement concliente = con.prepareStatement("select * from Clientes where Nombre = ? order by Nombre Asc");
                        PreparedStatement conFecha = con.prepareStatement("select CONVERT(varchar,GETDATE(),111) as fechaFormat");
                        concliente.setString(1, cliente3);
                        ResultSet rs = concliente.executeQuery();
                        ResultSet rsfecha = conFecha.executeQuery();
                        while(rs.next())
                        {
                            idcliente = Integer.parseInt(rs.getString("Id_Cliente"));
                        }
                        while(rsfecha.next())
                        {
                            fechaHoy = rsfecha.getString("fechaFormat");
                        }
                        //rs.close();

                        Object etapas3 = cbetapa.getSelectedItem();
                        String etapa3 = etapas3.toString();
                        PreparedStatement conetapa = con.prepareStatement("select Id_Etapa from Etapa where Activo = 1 and Nombre = ? order by Nombre Asc");
                        conetapa.setString(1, etapa3);
                        ResultSet rs1 = conetapa.executeQuery();
                        while(rs1.next())
                        {
                            idetapa = (rs1.getInt("Id_Etapa"));
                            //System.out.println(idetapa);
                        }
                        Object vendedores1 = cbVendedor.getSelectedItem();
                        String vendedor1 = vendedores1.toString();
                        PreparedStatement convendedor = con.prepareStatement("select id_vendedor from vendedores where Activo = 1 and nombre = ? order by nombre Asc");
                        convendedor.setString(1,vendedor1);
                        ResultSet rs2 = convendedor.executeQuery();
                        while(rs2.next())
                        {
                            idvendedor = (rs2.getInt("id_vendedor"));
                        }
                        rs.close();
                        rs1.close();
                        rsfecha.close();
                        rs2.close();
                    }catch(SQLException e){
                        JOptionPane.showMessageDialog(null, e.toString());
                    }

                    try{
                        con = conexion.establecerConexion();
                        String sql = "INSERT INTO Cotizacion (Id_Etapa, Id_Cliente, Id_Saco, Fecha, Tipo_cambio, Gramos_vaca, Precio_batch, Mezclado, Tarima, Flete, Tipo_part, Participacion, Descripcion, Activo, Id_Vendedor, Establo) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
                        PreparedStatement preparedStatement = con.prepareStatement(sql);
                        preparedStatement.setInt(1, idetapa);
                        preparedStatement.setInt(2, idcliente);
                        preparedStatement.setInt(3, idsaco);
                        preparedStatement.setString(4, fechaHoy);
                        preparedStatement.setBigDecimal(5, tipocambio);
                        preparedStatement.setString(6, gramos);
                        preparedStatement.setBigDecimal(7, preciobatch);
                        preparedStatement.setString(8, mezcla);
                        preparedStatement.setString(9, tarima);
                        preparedStatement.setString(10, flete);
                        preparedStatement.setString(11, tipopart);
                        preparedStatement.setBigDecimal(12, participacion);
                        preparedStatement.setString(13, "ACTUALIZACIÓN COTIZACIÓN " + idcot + " con fecha "+ fecha+ "\n " + descripcion);
                        preparedStatement.setInt(14, 1);
                        preparedStatement.setInt(15, idvendedor);
                        preparedStatement.setString(16, establo);
                        preparedStatement.executeUpdate();
                    }catch(SQLException e){
                        JOptionPane.showMessageDialog(null, e.toString());
                    }

                    DefaultTableModel modeloTabla3 = (DefaultTableModel) dgvCalculoBatch.getModel();
                    try{
                        
                        PreparedStatement idCotNuevo;
                        ResultSet rsIdCotNuevo;
                        idCotNuevo = con.prepareStatement("select top 1 Id_Cotizacion as numero from Cotizacion order by Id_Cotizacion Desc");
                        rsIdCotNuevo = idCotNuevo.executeQuery();
                        int cotNum = 0;
                        
                        while (rsIdCotNuevo.next()){
                            cotNum = Integer.parseInt(rsIdCotNuevo.getString("numero"));
                            //idcot2 = cotNum + 1;
                            //textBox2.setText(rsIdCotNuevo.setString("numero"));
                            textBox2.setText(String.valueOf(cotNum));
                        }
                        
                        for(int i = 0; i < dgvCalculoBatch.getRowCount(); i++)
                        {
                            Object nparte = modeloTabla3.getValueAt(i, 7);
                            String nparteString = nparte.toString();
                            int idnparte = Integer.parseInt(nparteString);

                            con = conexion.establecerConexion();
                            PreparedStatement preparedStatement2 = con.prepareStatement("insert into Detalle_Cotizacion (Id_Cotizacion,Id_Mp,Cantidad) values (?,?,?)");
                            preparedStatement2.setInt(1, cotNum);
                            preparedStatement2.setInt(2, idnparte);
                            BigDecimal cantidad4 = new BigDecimal(modeloTabla3.getValueAt(i, 2).toString());
                            preparedStatement2.setBigDecimal(3, cantidad4);
                            preparedStatement2.executeUpdate();
                            //JOptionPane.showMessageDialog(null, "Cotización guardada con éxito");
                            cbMatPrim.setEnabled(false);
                            dgvCalculoBatch.setEnabled(false);
                            btnCalcular.setEnabled(false);
                            btnguardar.setEnabled(false);
                        }
                        JOptionPane.showMessageDialog(null, "Cotización guardada con éxito");
                    }catch(SQLException e){
                        JOptionPane.showMessageDialog(null, e.toString());

                    }
                }
                else if(dialogResult == JOptionPane.NO_OPTION)
                {
                    JOptionPane.showMessageDialog(null, "Verifíquelos entonces");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Agregue una Descripcion");
            }
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }//GEN-LAST:event_btnguardarActionPerformed

    private void tbFleteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbFleteFocusGained
        // TODO add your handling code here:
        tbFlete.setText("");
    }//GEN-LAST:event_tbFleteFocusGained

    private void btnActualizarMateriaPrimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarMateriaPrimaActionPerformed
        // TODO add your handling code here:
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbMatPrim.getModel();
        model.removeAllElements();
        
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            con = conexion.establecerConexion();
            ps = con.prepareStatement("SELECT * FROM MP WHERE Activo=1 ORDER BY Nombre ASC");
            rs = ps.executeQuery();
            
            while (rs.next()) {
                model.addElement(rs.getString("Nombre")); 
            }
            
            cbMatPrim.setModel(model);
            
            rs.close();
            
        }catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_btnActualizarMateriaPrimaActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        cbcliente.setEnabled(true);
        cbetapa.setEnabled(true);
        tbPrecioBatchExtra.setEnabled(true);
        cbVendedor.setEnabled(true);
        tbUtilidadDeseada.setEnabled(true);
        tbGramosPVaca.setEnabled(true);
        tbMezclado.setEnabled(true);
        tbTarima.setEnabled(true);
        tbFlete.setEnabled(true);
        tbTipodeCambio.setEnabled(true);
        tbParticipacion.setEnabled(true);
        cbpart.setEnabled(true);
        dgvCalculoBatch.setEnabled(true);
        chk20.setEnabled(true);
        chksuper.setEnabled(true);
        chk30.setEnabled(true);
        chkinter.setEnabled(true);
        chkterceria.setEnabled(true);
        //btnguardar.setEnabled(true);
        btnCalcular.setEnabled(true);
        textBox3.setEnabled(true);
        btnagregarmat.setEnabled(true);
        cbVendedor.setEnabled(true);
        tbEstablo.setEnabled(true);
    }//GEN-LAST:event_btnEditarActionPerformed

    private void tbTipodeCambioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbTipodeCambioFocusLost
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) dgvCalculoBatch.getModel();
        if (model.getRowCount() > 0 && !tbTipodeCambio.getText().equals("")) {
            for(int i = 0; i < model.getRowCount(); i++)
            {
                String Moneda = dgvCalculoBatch.getValueAt(i, 4).toString();
                double preciouni = Double.parseDouble(dgvCalculoBatch.getValueAt(i, 3).toString());

                double total = 0;
                if (dgvCalculoBatch.getValueAt(i, 2) != null) {
                    double cantidad = Double.parseDouble(dgvCalculoBatch.getValueAt(i, 2).toString());
                    if (Moneda.equals("MN")) {
                        if(tbTipodeCambio.getText().equals("0.00") || tbTipodeCambio.getText().equals(""))
                            tbTipodeCambio.setText("1.00");
                        double tipocambio = Double.parseDouble(tbTipodeCambio.getText());
                        total = (preciouni * cantidad) / tipocambio;
                        total = Math.round(total * 10000.0) / 10000.0;
                        dgvCalculoBatch.setValueAt(total, i, 5);
                    } else {
                        total = preciouni * cantidad;
                        total = Math.round(total * 10000.0) / 10000.0;
                        dgvCalculoBatch.setValueAt(total, i, 5);
                    }
                }
            }
        }
    }//GEN-LAST:event_tbTipodeCambioFocusLost

    private void cargarDatos(){
        
        int[]anchosMax = {150,360,65,45,60,65,70,1,20};
        int[]anchosMin = {100,300,55,35,40,50,70,1,10};
        for(int i = 0; i < dgvCalculoBatch.getColumnCount(); i++){
            //dgvCalculoBatch.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            dgvCalculoBatch.getColumnModel().getColumn(i).setMaxWidth(anchosMax[i]);
            dgvCalculoBatch.getColumnModel().getColumn(i).setMinWidth(anchosMin[i]);
        }
        
        PreparedStatement ps, ps1, ps2, ps3, ps4, ps5, ps44;
        ResultSet rs, rs1, rs2, rs3, rs4, rs44, rs5;

        try {
            con = conexion.establecerConexion();

            if (cbcliente != null) {
                ps = con.prepareStatement("SELECT * FROM Clientes ORDER BY Nombre ASC");
                ps1 = con.prepareStatement("SELECT * FROM Etapa ORDER BY Nombre ASC");
                ps2 = con.prepareStatement("SELECT * FROM MP WHERE Activo=1 ORDER BY Nombre ASC");
                ps3 = con.prepareStatement("select Id_Cotizacion as numero from Cotizacion WHERE Id_Cotizacion= "+idNumCot);
                //ps4 = con.prepareStatement("select CONVERT(varchar,GETDATE(),111) as fecha");
                ps4 = con.prepareStatement("select Fecha FROM Cotizacion WHERE Id_Cotizacion= "+idNumCot);
                ps44 = con.prepareStatement("select * FROM vendedores ORDER BY nombre ASC");
                ps5 = con.prepareStatement("select Cotizacion.Id_Saco as saco,Cotizacion.Descripcion as observ,Cotizacion.Participacion as parti,Cotizacion.Tipo_part as tp,Cotizacion.Gramos_vaca as gramos,Cotizacion.Tipo_cambio as tipoc,Cotizacion.Flete as flete,Cotizacion.Tarima as tarima,Cotizacion.Mezclado as mezc,Cotizacion.Precio_batch as pbatch,Clientes.Nombre as ncliente,Etapa.Nombre as netapa, Cotizacion.Fecha as Fecha, vendedores.nombre as Vend, Cotizacion.Establo as Establo from Cotizacion left join vendedores on Cotizacion.Id_Vendedor=vendedores.id_vendedor inner join Etapa on Cotizacion.Id_Etapa=Etapa.Id_Etapa inner join Clientes on Cotizacion.Id_Cliente=Clientes.Id_Cliente where Id_Cotizacion = " + idNumCot + "");
                rs = ps.executeQuery();               
                rs1 = ps1.executeQuery();              
                rs2 = ps2.executeQuery();
                rs3 = ps3.executeQuery();
                rs4 = ps4.executeQuery();
                rs44 = ps44.executeQuery();
                rs5 = ps5.executeQuery();

                // Create a new DefaultComboBoxModel to replace the existing one
                DefaultComboBoxModel<String> newModel = new DefaultComboBoxModel<>();
                DefaultComboBoxModel<String> newMode11 = new DefaultComboBoxModel<>();
                DefaultComboBoxModel<String> newModel2 = new DefaultComboBoxModel<>();
                DefaultComboBoxModel<String> newModel3 = new DefaultComboBoxModel<>();

                while (rs.next()) {
                    newModel.addElement(rs.getString("Nombre")); 
                }
                while (rs1.next()){
                    newMode11.addElement(rs1.getString("Nombre"));
                }
                while (rs2.next()){
                    newModel2.addElement(rs2.getString("Nombre"));
                }
                while (rs3.next()){
                    int cotNum = Integer.parseInt(rs3.getString("numero"));
                    //textBox2.setText(rs3.getString("numero"));
                    textBox2.setText(String.valueOf(cotNum));
                }
                while (rs4.next()){
                    txtFecha.setText(rs4.getString("fecha"));
                }
                while (rs44.next()){
                    newModel3.addElement(rs44.getString("nombre"));
                }
                
                // Set the new model to the JComboBox
                cbcliente.setModel(newModel);
                cbetapa.setModel(newMode11);
                cbMatPrim.setModel(newModel2);
                cbVendedor.setModel(newModel3);
                int saco = 0;
                
                //ESCOGEMOS LOS DATOS DEPENDIENDO DE LA COTIZACION SELECCIONADA
                while (rs5.next()){
                    cbcliente.setSelectedItem(rs5.getString("ncliente"));
                    cbetapa.setSelectedItem(rs5.getString("netapa"));
                    tbPrecioBatchExtra.setText(rs5.getString("pbatch"));
                    tbMezclado.setText(rs5.getString("mezc"));
                    tbTarima.setText(rs5.getString("tarima"));
                    tbFlete.setText(rs5.getString("Flete"));
                    tbTipodeCambio.setText(rs5.getString("tipoc"));
                    tbGramosPVaca.setText(rs5.getString("gramos"));
                    cbpart.setSelectedItem(rs5.getString("tp"));
                    tbParticipacion.setText(rs5.getString("parti"));
                    textBox3.setText(rs5.getString("observ"));
                    cbVendedor.setSelectedItem(rs5.getString("Vend"));
                    tbEstablo.setText(rs5.getString("Establo"));
                    saco = rs5.getInt("saco");
                }

                rs.close();
                rs1.close();
                rs2.close();
                rs3.close();
                rs4.close();
                rs44.close();
                rs5.close();
                
                if (saco == 1)
                {
                    chksuper.setSelected(true); chkinter.setSelected(true);
                }
                else if (saco == 2)
                {
                    chk20.setSelected(true); chkinter.setSelected(true);
                }
                else if (saco == 3)
                {
                    chk30.setSelected(true); chkinter.setSelected(true);
                }
                else if (saco == 4)
                {
                    chksuper.setSelected(true); chkterceria.setSelected(true);
                }
                else if (saco == 5)
                {
                    chk20.setSelected(true); chkterceria.setSelected(true);
                }
                else if (saco == 6)
                {
                    chk30.setSelected(true); chkterceria.setSelected(true);
                }
                
                //PARA AGREGAR LA TABLA DE MATERIAS PRIMAS
                PreparedStatement ps6;
                ResultSet rs6;
                
                ps6 = con.prepareStatement("select MP.N_Parte as N_Parte, MP.Nombre as Nombre, MP.Precio as Precio, MP.Moneda as Moneda, MP.Densidad as Densidad, MP.Id_Mp as Id_Mp, MP.Proveedor as Proveedor, Detalle_Cotizacion.Cantidad as Cantidad from Detalle_Cotizacion inner join MP on Detalle_Cotizacion.Id_Mp = MP.Id_Mp where Id_Cotizacion =" + idNumCot);
                rs6 = ps6.executeQuery();
                int scale = 10;
                RoundingMode roundingMode = RoundingMode.HALF_UP;
                
                while(rs6.next()){
                    BigDecimal total = BigDecimal.ZERO;
                    BigDecimal roundedTotal = BigDecimal.ZERO;
                    BigDecimal tCambio = new BigDecimal(tbTipodeCambio.getText());
                    BigDecimal cantidad = new BigDecimal(rs6.getString("Cantidad"));
                    BigDecimal precio = new BigDecimal(rs6.getString("Precio"));
                    if(rs6.getString("Moneda").equals("MN")){
                        total = (cantidad.multiply(precio)).divide(tCambio,scale,roundingMode);
                        //total = (cantidad.multiply(precio));
                        roundedTotal = total.setScale(2, RoundingMode.HALF_UP);
                    }
                    else{
                        total = (cantidad.multiply(precio));
                        roundedTotal = total.setScale(2, RoundingMode.HALF_UP);
                    }
                    DefaultTableModel model = (DefaultTableModel) dgvCalculoBatch.getModel();

                    // Assuming dr is a ResultSet
                    Object[] rowData = {
                        rs6.getObject("Proveedor"),
                        rs6.getObject("Nombre"),
                        rs6.getObject("Cantidad"),
                        rs6.getObject("Precio"),
                        rs6.getObject("Moneda"),
                        roundedTotal.toString(),
                        //tCambio.toString(),
                        rs6.getObject("Densidad"),
                        rs6.getObject("Id_Mp"),
                        ""
                    };

                    model.addRow(rowData);
                }                                
            } else {
                JOptionPane.showMessageDialog(null, "Error: cbcot is null");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
        
        //AGREGUÉ TODO ESTO PARA REALIZAR LOS CÁLCULOS
        if(tbTipodeCambio.getText().equals(""))
            tbTipodeCambio.setText("1");
        if(tbFlete.getText().equals(""))
            tbFlete.setText("1");
        if(tbTarima.getText().equals(""))
            tbTarima.setText("1");
        if(tbParticipacion.getText().equals(""))
            tbParticipacion.setText("1");
        
        BigDecimal mez = new BigDecimal(tbPrecioBatchExtra.getText()).multiply(new BigDecimal(tbBatchExtra.getText())).add(new BigDecimal(tbMezclado.getText()));

        BigDecimal tar = new BigDecimal(tbTarima.getText());
        BigDecimal fle = new BigDecimal(tbFlete.getText());
        BigDecimal volumentotal = BigDecimal.ZERO;
        BigDecimal masalb = BigDecimal.ZERO;
        BigDecimal volumen = BigDecimal.ZERO;
        BigDecimal mil = BigDecimal.ZERO;

        Object cliente = cbcliente.getSelectedItem();
        String cboxclientes = cliente.toString();
        Object participacion = cbpart.getSelectedItem();
        String cbpart1 = participacion.toString();
        Object etapa = cbetapa.getSelectedItem();
        String cboxetapa = etapa.toString();

        try
        {
            if(!cboxclientes.equals("") && !cbpart1.equals("") && !cboxetapa.equals("") &&((chk20.isSelected() || chk30.isSelected() || chksuper.isSelected())
                && (chkinter.isSelected() || chkterceria.isSelected())) && !tbPrecioBatchExtra.getText().equals("0.00"))
        {
            int rowCount = dgvCalculoBatch.getRowCount();
            for(int i = 0; i < rowCount; i++)
            {
                /*String num = dgvCalculoBatch.getValueAt(i, dgvCalculoBatch.getColumnModel().getColumnIndex(0)).toString();
                String nom = dgvCalculoBatch.getValueAt(i, dgvCalculoBatch.getColumnModel().getColumnIndex(1)).toString();*/
                String num = dgvCalculoBatch.getValueAt(i, 7).toString();
                String nom = dgvCalculoBatch.getValueAt(i, 1).toString();
                /*BigDecimal can = new BigDecimal(dgvCalculoBatch.getValueAt(i, dgvCalculoBatch.getColumnModel().getColumnIndex("Cantidad")).toString());
                BigDecimal den = new BigDecimal(dgvCalculoBatch.getValueAt(i, dgvCalculoBatch.getColumnModel().getColumnIndex("Densidad")).toString());*/             
                //BigDecimal can = new BigDecimal(dgvCalculoBatch.getValueAt(i, 2).toString());
                //BigDecimal den = new BigDecimal(dgvCalculoBatch.getValueAt(i, 6).toString());
                Object valueTable = dgvCalculoBatch.getValueAt(i, 2);
                Object valueTable2 = dgvCalculoBatch.getValueAt(i, 6);
                BigDecimal can;
                if (valueTable != null) {
                    can = new BigDecimal(valueTable.toString());
                } else {
                    can = BigDecimal.ONE;
                }
                BigDecimal den = BigDecimal.valueOf(1);
                if (valueTable2 != null) {
                    den = new BigDecimal(valueTable2.toString());
                } else {
                    den = BigDecimal.ONE;
                }
                BigDecimal cam = new BigDecimal(tbTipodeCambio.getText());

                masalb = can.multiply(new BigDecimal("2.2046"));
                volumen = masalb.divide(den, RoundingMode.HALF_UP);
                volumentotal = volumentotal.add(volumen);
                //mil = mil.add(new BigDecimal(dgvCalculoBatch.getValueAt(i, dgvCalculoBatch.getColumnModel().getColumnIndex(2)).toString()));
                //mil = mil.add(new BigDecimal(dgvCalculoBatch.getValueAt(i, 2).toString())); ESTA USABA ANTES DE HACER LAS VALIDACIONES
                if (valueTable != null) {
                    mil = mil.add(new BigDecimal(valueTable.toString()));
                } else {
                    mil = mil.add(BigDecimal.ONE);
                }
            }

            int comparasion = mil.compareTo(new BigDecimal(1000));

            if(comparasion == 0)
            {
                simil = true;
                BigDecimal conversionFactor = new BigDecimal("40.59");
                BigDecimal result = volumentotal.multiply(BigDecimal.valueOf(100)).divide(conversionFactor, 4, RoundingMode.HALF_UP);
                txt_volumen.setText(result.toString());
                //(Convert.ToDecimal(txt_volumen.Text) * Convert.ToDecimal(1000.00 / 271.00)) / 100;
                BigDecimal hundred = new BigDecimal("100");
                //CAMBIAR EL 1000 por 500
                BigDecimal vol = (result.multiply(BigDecimal.valueOf(1000.00 / 500.00))).divide(hundred, 4, BigDecimal.ROUND_HALF_UP);
                //BigDecimal vol = (result.multiply(BigDecimal.valueOf(1000.00 / 500))).divide(hundred, 4, BigDecimal.ROUND_HALF_UP);
                BigDecimal vol2 = vol.setScale(0, RoundingMode.FLOOR).add(BigDecimal.ONE);
                txt_batch.setText(vol2.toString());

                if(result.compareTo(new BigDecimal("100")) >= 0) //SE SEBREPASA EL VOLUMEN
                {
                    txt_volumen.setOpaque(true);
                    txt_volumen.setBackground(Color.RED);

                    //AQUÍ LE CAMBIÉ, ERAN 271 EN LOS DOS DE 450
                    for(int i = 500; i >= 1; i = i - 10)
                    {
                        BigDecimal batch = new BigDecimal("1000.00").divide(BigDecimal.valueOf(i), RoundingMode.HALF_UP);
                        BigDecimal batch2 = new BigDecimal("1000.00").divide(BigDecimal.valueOf(i - 10), RoundingMode.HALF_UP);

                        if(i == 500)
                        {
                            if (vol.compareTo(BigDecimal.ZERO) > 0 && vol.compareTo(batch) <= 0){
                                txt_tamaño.setText(Integer.toString(i));
                                i = 0;
                            }
                            if (vol.compareTo(batch) > 0 && vol.compareTo(batch2) <= 0){
                                txt_tamaño.setText(Integer.toString(i - 10));
                                i = 0;
                            }
                        }
                        else
                        {
                            if (vol.compareTo(batch) > 0 && vol.compareTo(batch2) < 0){
                                txt_tamaño.setText(Integer.toString(i - 10));
                                i = 0;
                            }
                        }
                    }
                    //tbPrecioBatchExtra.setEnabled(true);
                }
                else //MENOS DE 100%
                {
                    txt_volumen.setOpaque(true);
                    txt_volumen.setBackground(Color.LIGHT_GRAY);
                    //AQUÍ TAMBIÉN LE CAMBIÉ, DECÍA 271
                    txt_tamaño.setText("500");
                }
                BigDecimal batch = new BigDecimal(txt_batch.getText());
                BigDecimal tamaño = new BigDecimal(txt_tamaño.getText());
                BigDecimal total = batch.multiply(tamaño);
                txt_total.setText(total.toString());
            }
            else
            {
                BigDecimal restan = new BigDecimal("1000").subtract(mil);
                if (restan.compareTo(BigDecimal.ZERO) > 0)
                    JOptionPane.showMessageDialog(null, "Las cantidades no suman 1000, suman "+mil+"\n Faltan "+restan+ "\n Verifique por favor");
                else
                    //restan.multiply(BigDecimal.valueOf(-1));
                    JOptionPane.showMessageDialog(null, "Las cantidades no suman 1000, suman "+mil+"\n Sobran "+restan.multiply(BigDecimal.valueOf(-1))+ "\n Verifique por favor");
                simil = false;
            }

            BigDecimal totalmat = BigDecimal.ZERO;
            BigDecimal precmat = BigDecimal.ZERO; //NUEVO
            for(int i = 0; i < rowCount; i++)
            {
                //precmat = new BigDecimal(dgvCalculoBatch.getValueAt(i, dgvCalculoBatch.getColumnModel().getColumnIndex(5)).toString());
                Object valueTable3 = dgvCalculoBatch.getValueAt(i, 5);
                if(valueTable3 != null)
                    precmat = new BigDecimal(valueTable3.toString());
                else
                    precmat = BigDecimal.ONE;
                //precmat = new BigDecimal(dgvCalculoBatch.getValueAt(i, 5).toString()); ESTE SE USABA ANTES
                totalmat = totalmat.add(precmat);
            }
            lblIngredientes.setText(totalmat.toString());
            BigDecimal preciosaco = BigDecimal.ZERO;

            if(chksuper.isSelected() == true)
            {
                txt_cantidadsacos.setText("1");
                txt_kilos.setText(txt_total.getText());

                //PODRÍA REVISAR ESTO, YA QUE HAY DOS TRY-CATCH, PODRIA DEJARLO EN 1 TAL VEZ
                if(chkinter.isSelected() == true)
                {
                    try{
                        con = conexion.establecerConexion();
                        PreparedStatement psCal = con.prepareStatement("select * from Sacos where Id_Saco = 1 order by Nombre Asc");
                        ResultSet rsCal = psCal.executeQuery();
                        while(rsCal.next())
                        {
                            preciosaco = new BigDecimal(rsCal.getString("precio"));
                            lblEnsacado.setText(preciosaco.toString());
                        }
                        rsCal.close();
                    }catch(SQLException e){
                        JOptionPane.showMessageDialog(null, e.toString());
                    }
                }else
                {
                    try{
                        con = conexion.establecerConexion();
                        PreparedStatement psCal = con.prepareStatement("select * from Sacos where Id_Saco = 4 order by Nombre Asc");
                        ResultSet rsCal = psCal.executeQuery();
                        while(rsCal.next())
                        {
                            preciosaco = new BigDecimal(rsCal.getString("precio"));
                            lblEnsacado.setText(preciosaco.toString());
                        }
                        rsCal.close();
                    }catch(SQLException e){
                        JOptionPane.showMessageDialog(null, e.toString());
                    }
                }
            }

            else if(chk20.isSelected() == true)
            {
                if(simil == true)
                {
                    int tamano = Integer.parseInt(txt_tamaño.getText().substring(0,2)+"0");
                    int cantidadsacos = (tamano/20)*Integer.parseInt(txt_batch.getText());
                    txt_cantidadsacos.setText(Integer.toString(cantidadsacos));
                    txt_kilos.setText("20");
                    if(chkinter.isSelected() == true)
                    {
                        try{
                            con = conexion.establecerConexion();
                            PreparedStatement psCal = con.prepareStatement("select * from Sacos where Id_Saco = 2 order by Nombre Asc");
                            ResultSet rsCal = psCal.executeQuery();
                            while(rsCal.next())
                            {
                                preciosaco = new BigDecimal(rsCal.getString("precio"));
                                preciosaco = preciosaco.multiply(new BigDecimal(txt_cantidadsacos.getText()));
                                lblEnsacado.setText(preciosaco.toString());
                            }
                            rsCal.close();
                        }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.toString());
                        }
                    }
                }
                else
                {
                    try{
                        con = conexion.establecerConexion();
                        PreparedStatement psCal = con.prepareStatement("select * from Sacos where Id_Saco = 5 order by Nombre Asc");
                        ResultSet rsCal = psCal.executeQuery();
                        while(rsCal.next())
                        {
                            preciosaco = new BigDecimal(rsCal.getString("precio"));
                            preciosaco = preciosaco.multiply(new BigDecimal(txt_cantidadsacos.getText()));
                            lblEnsacado.setText(preciosaco.toString());
                        }
                        rsCal.close();
                    }catch(SQLException e){
                        JOptionPane.showMessageDialog(null, e.toString());
                    }
                }
            }

            else if(chk30.isSelected() == true)
            {
                if(simil == true)
                {
                    int tamano = Integer.parseInt(txt_tamaño.getText().substring(0,2)+"0");
                    int cantidadsacos = (tamano/30)*Integer.parseInt(txt_batch.getText());
                    txt_cantidadsacos.setText(Integer.toString(cantidadsacos));
                    txt_kilos.setText("30");
                    if(chkinter.isSelected() == true)
                    {
                        try{
                            con = conexion.establecerConexion();
                            PreparedStatement psCal = con.prepareStatement("select * from Sacos where Id_Saco = 3 order by Nombre Asc");
                            ResultSet rsCal = psCal.executeQuery();
                            while(rsCal.next())
                            {
                                preciosaco = new BigDecimal(rsCal.getString("precio"));
                                preciosaco = preciosaco.multiply(new BigDecimal(txt_cantidadsacos.getText()));
                                lblEnsacado.setText(preciosaco.toString());
                            }
                            rsCal.close();
                        }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.toString());
                        }
                    }
                }
                else
                {
                    try{
                        con = conexion.establecerConexion();
                        PreparedStatement psCal = con.prepareStatement("select * from Sacos where Id_Saco = 6 order by Nombre Asc");
                        ResultSet rsCal = psCal.executeQuery();
                        while(rsCal.next())
                        {
                            preciosaco = new BigDecimal(rsCal.getString("precio"));
                            preciosaco = preciosaco.multiply(new BigDecimal(txt_cantidadsacos.getText()));
                            lblEnsacado.setText(preciosaco.toString());
                        }
                        rsCal.close();
                    }catch(SQLException e){
                        JOptionPane.showMessageDialog(null, e.toString());
                    }
                }
            }

            //REVISION HASTA AQUÍ
            BigDecimal totalbatchCal = BigDecimal.ZERO;
            BigDecimal txtvolumenCal = new BigDecimal(txt_volumen.getText());
            if(txtvolumenCal.compareTo(BigDecimal.valueOf(100)) > 0)
            {
                int batch1 = Integer.parseInt(txt_batch.getText())+1;
                txt_batch.setText(Integer.toString(batch1));
                BigDecimal div = new BigDecimal((Integer.parseInt(txt_total.getText())/Integer.parseInt(txt_batch.getText())));
                txt_tamaño.setText(div.toString());
                int extra1 = Integer.parseInt(txt_batch.getText())-4;
                txtextra.setText(Integer.toString(extra1));

                //CAMBIO
                int scale = 10;
                RoundingMode roundingMode = RoundingMode.HALF_UP;
                BigDecimal totalbatch2 = new BigDecimal(tbPrecioBatchExtra.getText()).divide(new BigDecimal(tbTipodeCambio.getText()),scale,roundingMode);
                //HASTA AQUÍ CAMBIO
                totalbatchCal = totalbatch2.multiply(new BigDecimal(txtextra.getText()));
                txttotalbatch.setText(totalbatchCal.toString());
            }
            int scale = 10;
            RoundingMode roundingMode = RoundingMode.HALF_UP;
            BigDecimal mezclado = new BigDecimal(tbMezclado.getText()).divide(new BigDecimal(tbTipodeCambio.getText()),scale,roundingMode);
            BigDecimal tarima = new BigDecimal(tbTarima.getText()).divide(new BigDecimal(tbTipodeCambio.getText()),scale,roundingMode);
            BigDecimal flete = new BigDecimal(tbFlete.getText()).divide(new BigDecimal(tbTipodeCambio.getText()),scale,roundingMode);
            BigDecimal ingredientes = new BigDecimal(lblIngredientes.getText());
            BigDecimal ensacado = new BigDecimal(lblEnsacado.getText());
            BigDecimal batchprecio =  new BigDecimal(txttotalbatch.getText());
            BigDecimal subtotal = mezclado.add(tarima).add(flete).add(ingredientes).add(ensacado).add(batchprecio);
            subtotal = subtotal.setScale(4, RoundingMode.HALF_UP);
            lblSubtotal.setText(subtotal.toString());
            BigDecimal parti = BigDecimal.ZERO;
            BigDecimal participa = new BigDecimal(tbParticipacion.getText()).divide(BigDecimal.valueOf(100));
            BigDecimal totaltotal = BigDecimal.ZERO;

            //COMENTÉ ESTO YA QUE ES DONDE TOMA LA UTILIDAD DESEADA Y CALCULA EL MEZCLADO, PENSAR COMO HACERLO
            //ESTO AGREGUÉ
            /*BigDecimal utilidadDeseada1 = BigDecimal.valueOf(0);
            if (!tbUtilidadDeseada.getText().equals("") || !tbUtilidadDeseada.getText().equals("NaN")){
                utilidadDeseada1 = BigDecimal.valueOf(100).subtract(new BigDecimal(tbUtilidadDeseada.getText()));
                //utilidadDeseada1 = BigDecimal.valueOf(100);
            }
            else{
                utilidadDeseada1 = BigDecimal.valueOf(100);
            }
            BigDecimal utilidadDeseadaDecimal = utilidadDeseada1.divide(BigDecimal.valueOf(100));
            BigDecimal resUtilidadDeseada = ingredientes.divide(utilidadDeseadaDecimal,scale,roundingMode);
            BigDecimal totalUtilidadDeseada = resUtilidadDeseada.subtract(ingredientes);
            BigDecimal utilidadDeseadaDolares = totalUtilidadDeseada.multiply(new BigDecimal(tbTipodeCambio.getText()));
            tbMezclado.setText(utilidadDeseadaDolares.toString());
            //HASTA AQUÍ*/

            Object part3 = cbpart.getSelectedItem();
            String cbpart3 = part3.toString();
            if(cbpart3.equals("%"))
            {
                /*AQUÍ CAMBIO
                parti = subtotal.multiply(participa).setScale(4, RoundingMode.HALF_UP);*/
                parti = new BigDecimal(tbMezclado.getText()).multiply(participa).setScale(4, RoundingMode.HALF_UP);
                lblParticipacion.setText(parti.toString());
                totaltotal = parti.add(subtotal);
                lblTotal.setText(totaltotal.toString());
            }
            else if(cbpart3.equals("$"))
            {
                parti = new BigDecimal(tbParticipacion.getText()).divide(new BigDecimal(tbTipodeCambio.getText()),scale,roundingMode);
                lblParticipacion.setText(parti.toString());
                totaltotal = parti.add(subtotal);
                lblTotal.setText(totaltotal.toString());
            }
            //btnguardar.setEnabled(true);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Verifique todos los campos, por favor");
        }
        }
        /*catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.toString());
        }*/
        catch (IllegalArgumentException e) {
            // Print the stack trace to the console
            e.printStackTrace();
        }
        
        //SACAMOS LA UTILIDAD HACIENDO DE REVERSA LA FÓRMULA, TENEMOS QUE AGREGAR LOS INGREDIENTES YA QUE ESOS SALEN POR EL CÁLCULO DE
        //LAS MATERIAS PRIMAS DE LA TABLA
        double mezcladoRev = Double.parseDouble(tbMezclado.getText());
        double tipoCambioRev = Double.parseDouble(tbTipodeCambio.getText());
        double division1 = mezcladoRev / tipoCambioRev;
                
        double ingredientesRev = Double.parseDouble(lblIngredientes.getText());
        double suma1 = division1 + ingredientesRev;
                
        double division2 = ingredientesRev / suma1;
        double mult1 = division2 * 100;
        double resDef = 100 - mult1;
        DecimalFormat df = new DecimalFormat("#.00");
        tbUtilidadDeseada.setText(String.valueOf(df.format(resDef)));
        
        for(int i = 0; i < dgvCalculoBatch.getRowCount(); i++){
            dgvCalculoBatch.setValueAt(i+1, i, 8);
        }
    }
    
    private void addRows(){
        if(tbTipodeCambio.getText().equals("0.00")){
            JOptionPane.showMessageDialog(null, "Recuerde insertar tipo de cambio", "Informacion", JOptionPane.INFORMATION_MESSAGE);
            tbTipodeCambio.requestFocus();
        }
        
        int rowCount = dgvCalculoBatch.getRowCount();
        int columnIndex = 8;
        for(int i = 0; i < rowCount; i++)
            dgvCalculoBatch.setValueAt(i + 1, i, columnIndex);
    }
    
    private void handleCellChange(int row) {
        //DefaultTableModel model = (DefaultTableModel) dgvCalculoBatch.getModel();
        //JOptionPane.showMessageDialog(null, dgvCalculoBatch.getValueAt(row, 2).toString());
        String Moneda = dgvCalculoBatch.getValueAt(row, 4).toString();
        double preciouni = Double.parseDouble(dgvCalculoBatch.getValueAt(row, 3).toString());
        
        double total = 0;
        if (!dgvCalculoBatch.getValueAt(row, 2).toString().equals("")) {
            double cantidad = Double.parseDouble(dgvCalculoBatch.getValueAt(row, 2).toString());
            if (Moneda.equals("MN")) {
                if(tbTipodeCambio.getText().equals("0.00") || tbTipodeCambio.getText().equals(""))
                    tbTipodeCambio.setText("1.00");
                double tipocambio = Double.parseDouble(tbTipodeCambio.getText());
                total = (preciouni * cantidad) / tipocambio;
                total = Math.round(total * 10000.0) / 10000.0;
                dgvCalculoBatch.setValueAt(total, row, 5);
            } else {
                total = preciouni * cantidad;
                total = Math.round(total * 10000.0) / 10000.0;
                dgvCalculoBatch.setValueAt(total, row, 5);
            }
        }
        
        /*for(int i = 0; i < dgvCalculoBatch.getRowCount(); i++){
            dgvCalculoBatch.setValueAt(i+1, i, 7);
        }*/
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarCotizacionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarCotizacionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarCotizacionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarCotizacionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModificarCotizacionFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanelBatch;
    private javax.swing.JPanel JPanelDatosGenerales;
    private javax.swing.JButton btnActualizarMateriaPrima;
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnagregarmat;
    private javax.swing.JButton btnguardar;
    private javax.swing.JComboBox<String> cbMatPrim;
    private javax.swing.JComboBox<String> cbVendedor;
    private javax.swing.JComboBox<String> cbcliente;
    private javax.swing.JComboBox<String> cbetapa;
    private javax.swing.JComboBox<String> cbpart;
    private javax.swing.JRadioButton chk20;
    private javax.swing.JRadioButton chk30;
    private javax.swing.JRadioButton chkinter;
    private javax.swing.JRadioButton chksuper;
    private javax.swing.JRadioButton chkterceria;
    private javax.swing.JTable dgvCalculoBatch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelCostos;
    private javax.swing.JPanel jPanelEnsacado;
    private javax.swing.JPanel jPanelGramosXVaca;
    private javax.swing.JPanel jPanelMateriaPrima;
    private javax.swing.JPanel jPanelObservaciones;
    private javax.swing.JPanel jPanelTotales;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblEnsacado;
    private javax.swing.JLabel lblIngredientes;
    private javax.swing.JLabel lblParticipacion;
    private javax.swing.JLabel lblSubtotal;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTextField tbBatchExtra;
    private javax.swing.JTextField tbEstablo;
    private javax.swing.JTextField tbFlete;
    private javax.swing.JTextField tbGramosPVaca;
    private javax.swing.JTextField tbMezclado;
    private javax.swing.JTextField tbParticipacion;
    private javax.swing.JTextField tbPrecioBatchExtra;
    private javax.swing.JTextField tbTarima;
    private javax.swing.JTextField tbTipodeCambio;
    private javax.swing.JTextField tbUtilidadDeseada;
    private javax.swing.JLabel textBox2;
    private javax.swing.JTextArea textBox3;
    private javax.swing.JLabel txtFecha;
    private javax.swing.JLabel txt_batch;
    private javax.swing.JLabel txt_cantidadsacos;
    private javax.swing.JLabel txt_kilos;
    private javax.swing.JLabel txt_tamaño;
    private javax.swing.JLabel txt_total;
    private javax.swing.JLabel txt_volumen;
    private javax.swing.JLabel txtextra;
    private javax.swing.JLabel txttotalbatch;
    // End of variables declaration//GEN-END:variables
}
