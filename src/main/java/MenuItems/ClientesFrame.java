/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MenuItems;

import com.mycompany.intersisacotizador_ver2.Conexion;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Asus
 */
public class ClientesFrame extends javax.swing.JFrame {

    /**
     * Creates new form ClientesFrame
     */
    
    private static BufferedReader sr;
    //private static String conexion;
    private static Connection con;
    private static Conexion conexion;
    
    static {
        try {
            /*sr = new BufferedReader(new FileReader("C:\\Conexion\\Conexion.txt"));
            conexion = sr.readLine();
            con = DriverManager.getConnection(conexion);*/
            conexion = new Conexion();
            con = conexion.establecerConexion();
            con.setAutoCommit(false);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public ClientesFrame() {
        initComponents();
        setLocationRelativeTo(null);
        setLocation(getX(), 75);
        
        try {
            if (con != null && !con.isClosed()) {
                con.close();
            }
            if (sr != null) {
                try {
                    sr.close();
                } catch (IOException ioException) {
                    ioException.printStackTrace();
                    // Handle the IOException or log it as needed
                }
            }
            //con = DriverManager.getConnection(conexion);
            con = conexion.establecerConexion();
            con.setAutoCommit(false); // Optionally disable autocommit

            // Create a statement after re-establishing the connection
            Statement statement = con.createStatement();

            // Use the statement to execute your query
            PreparedStatement client = con.prepareStatement("SELECT * FROM Clientes WHERE Activo = 1 ORDER BY Nombre ASC");
            ResultSet dr = client.executeQuery();

            while (dr.next()) {
                cbclientes.addItem(dr.getString("Nombre"));
            }

            dr.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        btnguardar = new javax.swing.JButton();
        txtliteral = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cbclientes = new javax.swing.JComboBox<>();
        txtNombreMod = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btneliminar = new javax.swing.JButton();
        btnmodificar = new javax.swing.JButton();
        txtLiteralMod = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTabbedPane1.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel1.setText("Nombre");

        txtnombre.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        txtnombre.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtnombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtnombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnombreActionPerformed(evt);
            }
        });

        btnguardar.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        btnguardar.setText("Guardar");
        btnguardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnguardarMouseClicked(evt);
            }
        });

        txtliteral.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        txtliteral.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtliteral.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtliteral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtliteralActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel4.setText("Literal");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnguardar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtnombre, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                            .addComponent(txtliteral))))
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtliteral, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(btnguardar)
                .addGap(31, 31, 31))
        );

        jTabbedPane1.addTab("Alta", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel2.setText("Seleccione");

        cbclientes.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        cbclientes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbclientesItemStateChanged(evt);
            }
        });
        cbclientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbclientesMouseClicked(evt);
            }
        });

        txtNombreMod.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        txtNombreMod.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNombreMod.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtNombreMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreModActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel3.setText("Nombre");

        btneliminar.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        btneliminar.setText("Eliminar");
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });

        btnmodificar.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        btnmodificar.setText("Modificar");
        btnmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodificarActionPerformed(evt);
            }
        });

        txtLiteralMod.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        txtLiteralMod.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtLiteralMod.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtLiteralMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLiteralModActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel5.setText("Literal");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(371, Short.MAX_VALUE)
                        .addComponent(btnmodificar)
                        .addGap(34, 34, 34)
                        .addComponent(btneliminar))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(19, 19, 19))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3))
                                .addGap(26, 26, 26)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbclientes, 0, 470, Short.MAX_VALUE)
                            .addComponent(txtNombreMod)
                            .addComponent(txtLiteralMod))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbclientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombreMod, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLiteralMod, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btneliminar)
                    .addComponent(btnmodificar))
                .addGap(24, 24, 24))
        );

        jTabbedPane1.addTab("Modificar", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtnombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnombreActionPerformed

    private void txtNombreModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreModActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreModActionPerformed

    private void txtliteralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtliteralActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtliteralActionPerformed

    private void txtLiteralModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLiteralModActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLiteralModActionPerformed

    private void btnguardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnguardarMouseClicked
        String nombre = txtnombre.getText();
        String literal = txtliteral.getText();
        if(!nombre.equals("") && !literal.equals("")){
            try{
                con = conexion.establecerConexion(); 
                
                if (!nombreExists(con, nombre)) {
                PreparedStatement ps = con.prepareStatement("INSERT INTO Clientes (Nombre, Literal, Activo) VALUES (?,?,?)");
                ps.setString(1, nombre);
                ps.setString(2, literal);
                ps.setInt(3, 1);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Cliente guardado");
                limpiar();
                actualizarCB();
                }else{
                    JOptionPane.showMessageDialog(null, "Ya existe un cliente con este nombre");
                }

            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null, e.toString());
            }   
        }else{
            JOptionPane.showMessageDialog(null, "Ingrese todos los datos antes de guardar");
            }
    }//GEN-LAST:event_btnguardarMouseClicked

    private void cbclientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbclientesMouseClicked

    }//GEN-LAST:event_cbclientesMouseClicked

    private void cbclientesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbclientesItemStateChanged
        // TODO add your handling code here:
        try{
            Object nombreOb = cbclientes.getSelectedItem();
            String nombre = nombreOb.toString();
            con = conexion.establecerConexion();
            ResultSet rs;
            PreparedStatement ps = con.prepareStatement("SELECT Literal FROM Clientes WHERE Nombre = ?");
            ps.setString(1, nombre);
            rs = ps.executeQuery();
            while(rs.next()){
                txtNombreMod.setText(nombre);
                txtLiteralMod.setText(rs.getString("Literal"));
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_cbclientesItemStateChanged

    private void btnmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodificarActionPerformed
        // TODO add your handling code here:
        Object nombreOb = cbclientes.getSelectedItem();
        String nombre = nombreOb.toString();
        String nombreMod = txtNombreMod.getText();
        String literal = txtLiteralMod.getText();
        
        if(!nombreMod.equals("") && !literal.equals("")){
            try{
                con = conexion.establecerConexion();
                int id = obtenerIdPorNombre(con, nombre);
                PreparedStatement ps = con.prepareStatement("UPDATE Clientes SET Nombre=?, Literal=? WHERE id_Cliente=?");
                ps.setString(1, nombreMod);
                ps.setString(2, literal);
                ps.setInt(3, id);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Cliente modificado");
                limpiar2();
                actualizarCB();
                cbclientes.setSelectedItem(nombreMod);

            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, e.toString());
            }
        }
            else{
            JOptionPane.showMessageDialog(null, "Ingrese todos los datos antes de guardar");
        }
    }//GEN-LAST:event_btnmodificarActionPerformed

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
        // TODO add your handling code here:
        Object nombreOb = cbclientes.getSelectedItem();
        String nombre = nombreOb.toString();
        
            try{
                con = conexion.establecerConexion();
                int id = obtenerIdPorNombre(con, nombre);
                PreparedStatement ps = con.prepareStatement("UPDATE Clientes SET Activo=0 WHERE id_Cliente=?");
                ps.setInt(1, id);
                ps.executeUpdate();
                DefaultComboBoxModel model = (DefaultComboBoxModel) cbclientes.getModel();
                model.removeElement(nombre);
                JOptionPane.showMessageDialog(null, "Cliente eliminado");
                limpiar2();
                actualizarCB();

            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, e.toString());
            }
    }//GEN-LAST:event_btneliminarActionPerformed
    
    
    private void limpiar(){
        txtnombre.setText("");
        txtliteral.setText("");
    }
    private void limpiar2(){
        txtNombreMod.setText("");
        txtLiteralMod.setText("");
    }
    
    private void actualizarCB(){
        /*DefaultComboBoxModel model = (DefaultComboBoxModel) cbclientes.getModel();
        model.removeAllElements();*/
        try{
            con = conexion.establecerConexion();
            PreparedStatement client = con.prepareStatement("SELECT * FROM Clientes WHERE Activo = 1 ORDER BY Nombre ASC");
            ResultSet dr = client.executeQuery();

            // Create a new DefaultComboBoxModel to replace the existing one
            DefaultComboBoxModel<String> newModel = new DefaultComboBoxModel<>();
            
            while (dr.next()) {
                newModel.addElement(dr.getString("Nombre"));
            }
            cbclientes.setModel(newModel);

            dr.close();
        }catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.toString());
        }
        
    }
    
    private int obtenerIdPorNombre(Connection con, String nombre) throws SQLException {
        int id = -1;

        String query = "SELECT id_Cliente FROM Clientes WHERE Nombre = ?";
        try (PreparedStatement ps = con.prepareStatement(query)) {
            ps.setString(1, nombre);
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    id = rs.getInt("id_Cliente");
                }
            }
        }
        return id;
    }
    private boolean nombreExists(Connection con, String nombre) throws SQLException {
    String query = "SELECT COUNT(*) FROM Clientes WHERE Nombre = ?";
    try (PreparedStatement ps = con.prepareStatement(query)) {
        ps.setString(1, nombre);
        try (ResultSet rs = ps.executeQuery()) {
            rs.next();
            int count = rs.getInt(1);
            return count > 0;
        }
    }
}

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientesFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btneliminar;
    private javax.swing.JButton btnguardar;
    private javax.swing.JButton btnmodificar;
    private javax.swing.JComboBox<String> cbclientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField txtLiteralMod;
    private javax.swing.JTextField txtNombreMod;
    private javax.swing.JTextField txtliteral;
    private javax.swing.JTextField txtnombre;
    // End of variables declaration//GEN-END:variables
}
